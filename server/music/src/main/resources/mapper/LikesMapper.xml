<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asuka.music.dao.LikesMapper">
<resultMap id="BaseResultMap" type="com.asuka.music.domain.Likes" >
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="type" jdbcType="TINYINT" property="type"/>
    <result column="song_id" jdbcType="INTEGER" property="songId"/>
    <result column="song_list_id" jdbcType="INTEGER" property="songListId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
</resultMap>

    <sql id="Base_Column_List">
        id,user_id,type,song_id,song_list_id,create_time
    </sql>
    <insert id="insert" parameterType="com.asuka.music.domain.Likes">
        insert into likes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="songId != null">
                song_id,
            </if>
            <if test="songListId != null">
                song_list_id,
            </if>
            create_time,
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="songId != null">
                #{songId},
            </if>
            <if test="songListId != null">
                #{songListId},
            </if>
            now(),
        </trim>
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from likes
        where id = #{id}
    </delete>
    <delete id="deleteSongLikes" parameterType="java.lang.Integer">
        delete from likes
        where song_id = #{songId}
    </delete>

    <select id="allLikes" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from likes
    </select>

    <select id="LikesOfUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List" />
        from likes
        where user_id = #{userId}
    </select>

    <select id="existLikes" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select id from likes
        where user_id = #{userId} and song_id = #{songId}
    </select>
    <select id="existAlbums" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select id from likes
        where user_id = #{userId} and song_list_id = #{songListId}
    </select>
</mapper>